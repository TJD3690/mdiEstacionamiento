/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import Gestion.Cliente;
import Gestion.Empleado;
import controlador.*;
import java.awt.Dimension;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.JTextField;
import java.sql.*;
import java.util.Vector;
import conexion.Conexion;

import Gestion.Distrito;

/**
 *
 * @author LENOVO
 */
public class JInternalFrameRegNuevoCliente extends javax.swing.JInternalFrame {

    int obtenerIdUsuario=0;
    public JInternalFrameRegNuevoCliente() {
        initComponents();
        this.setSize(new Dimension(420, 500));
        this.setTitle("Nuevo Cliente");
        cargarDistritosAutoCompletar(DistritoUsuario);
        txtNombresNUsuario1.setEditable(false); 
    }
    //-----------------------El autocompletado del comboBBox
    private void cargarDistritosAutoCompletar(JComboBox comboBox) {
    try {
        Connection con = Conexion.establecerConexion();
        String sql = "SELECT Nombre FROM Distrito ORDER BY Nombre";
        PreparedStatement ps = con.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        final Vector<String> distritos = new Vector<>();
        while (rs.next()) {
            distritos.add(rs.getString("Nombre"));
        }

        comboBox.setEditable(true);
        comboBox.setModel(new DefaultComboBoxModel(distritos));
        comboBox.setSelectedItem(null); // inicia en blanco

        JTextField editor = (JTextField) comboBox.getEditor().getEditorComponent();

        editor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                String texto = editor.getText();

                Vector<String> coincidencias = new Vector<>();
                for (String item : distritos) {
                    if (item.toLowerCase().startsWith(texto.toLowerCase())) {
                        coincidencias.add(item);
                    }
                }

                if (!coincidencias.isEmpty()) {
                    comboBox.setModel(new DefaultComboBoxModel(coincidencias));
                    comboBox.setSelectedItem(texto);
                    comboBox.showPopup();
                } else {
                    comboBox.hidePopup();
                }
            }
        });

        con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al cargar distritos: " + e.getMessage());
    }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField3 = new javax.swing.JTextField();
        jTextField5 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jButton1 = new javax.swing.JButton();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jComboBox2 = new javax.swing.JComboBox<>();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtNumDocNUsuario = new javax.swing.JTextField();
        txtApellidosNUsuario = new javax.swing.JTextField();
        txtTelefonoNUsuario = new javax.swing.JTextField();
        txtCorreoNUsuario = new javax.swing.JTextField();
        cbxTipDocNUsuario = new javax.swing.JComboBox<>();
        cbxDireccionNUsuario = new javax.swing.JTextField();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        txtNombresNUsuario = new javax.swing.JTextField();
        cbxNacionaNUsuario = new javax.swing.JComboBox<>();
        btnLimpiar = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        DistritoUsuario = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtNombresNUsuario1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtNroLicencia = new javax.swing.JTextField();

        jTextField3.setText("jTextField3");

        jTextField5.setText("jTextField5");

        jRadioButton1.setText("jRadioButton1");

        jButton1.setText("jButton1");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jToggleButton1.setText("jToggleButton1");

        setClosable(true);
        setIconifiable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Nuevo Cliente");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(120, 0, 170, 32);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Nombres:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(20, 90, 59, 20);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Apellidos:");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(20, 120, 58, 20);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Telefono");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(20, 150, 52, 20);

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Correo");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(20, 180, 42, 20);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Nacionalidad");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(20, 210, 78, 20);

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Distrito");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(20, 240, 45, 20);

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Direccion");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(20, 270, 70, 20);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel12.setText("Sexo:");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(20, 330, 60, 20);

        jLabel13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel13.setText("Tipo de Documento:");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(20, 360, 150, 20);

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setText("Numero de Documento:");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(20, 390, 160, 20);

        txtNumDocNUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumDocNUsuarioKeyTyped(evt);
            }
        });
        jPanel1.add(txtNumDocNUsuario);
        txtNumDocNUsuario.setBounds(200, 390, 180, 22);

        txtApellidosNUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtApellidosNUsuarioKeyTyped(evt);
            }
        });
        jPanel1.add(txtApellidosNUsuario);
        txtApellidosNUsuario.setBounds(200, 120, 180, 22);

        txtTelefonoNUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTelefonoNUsuarioActionPerformed(evt);
            }
        });
        txtTelefonoNUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoNUsuarioKeyTyped(evt);
            }
        });
        jPanel1.add(txtTelefonoNUsuario);
        txtTelefonoNUsuario.setBounds(200, 150, 180, 22);

        txtCorreoNUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCorreoNUsuarioKeyTyped(evt);
            }
        });
        jPanel1.add(txtCorreoNUsuario);
        txtCorreoNUsuario.setBounds(200, 180, 180, 22);

        cbxTipDocNUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DNI", "carne de extranjeria", "pasaporte" }));
        jPanel1.add(cbxTipDocNUsuario);
        cbxTipDocNUsuario.setBounds(200, 360, 180, 22);
        jPanel1.add(cbxDireccionNUsuario);
        cbxDireccionNUsuario.setBounds(200, 270, 180, 22);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Mujer");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton2);
        jRadioButton2.setBounds(220, 330, 60, 21);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("Hombre");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButton3);
        jRadioButton3.setBounds(300, 330, 70, 21);

        txtNombresNUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresNUsuarioActionPerformed(evt);
            }
        });
        txtNombresNUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresNUsuarioKeyTyped(evt);
            }
        });
        jPanel1.add(txtNombresNUsuario);
        txtNombresNUsuario.setBounds(200, 90, 180, 22);

        cbxNacionaNUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "No Especificado", "Peruana", "Extranjera" }));
        jPanel1.add(cbxNacionaNUsuario);
        cbxNacionaNUsuario.setBounds(200, 210, 180, 22);

        btnLimpiar.setText("LIMPIAR");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnLimpiar);
        btnLimpiar.setBounds(230, 430, 100, 23);

        btnGuardar.setText("GUARDAR");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar);
        btnGuardar.setBounds(70, 430, 100, 23);

        DistritoUsuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DistritoUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DistritoUsuarioActionPerformed(evt);
            }
        });
        jPanel1.add(DistritoUsuario);
        DistritoUsuario.setBounds(200, 240, 180, 22);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("IdCliente:");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(20, 60, 59, 20);

        txtNombresNUsuario1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresNUsuario1ActionPerformed(evt);
            }
        });
        txtNombresNUsuario1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombresNUsuario1KeyTyped(evt);
            }
        });
        jPanel1.add(txtNombresNUsuario1);
        txtNombresNUsuario1.setBounds(200, 60, 180, 22);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("NroLicencia");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(20, 300, 70, 20);
        jPanel1.add(txtNroLicencia);
        txtNroLicencia.setBounds(200, 300, 180, 22);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void txtNombresNUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresNUsuarioKeyTyped
        String text= txtNombresNUsuario.getText();//texto actual
        int lim=30;
        if(text.length()>= lim) evt.consume();
        
        char c= evt.getKeyChar();//c= caracter actual
        // Permite solo letras
        if (!Character.isLetter(c) && c != ' ') {
        evt.consume();
        return;
        }
        // Permite máximo un espacio
        if (c == ' ' && text.contains(" ")) {
            evt.consume();
        }
    }//GEN-LAST:event_txtNombresNUsuarioKeyTyped

    private void txtNombresNUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresNUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresNUsuarioActionPerformed

    private void txtApellidosNUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtApellidosNUsuarioKeyTyped
        String text= txtApellidosNUsuario.getText();//texto actual
        int lim=30;
        if(text.length()>= lim) evt.consume();
        
        char c= evt.getKeyChar();//c= caracter actual
        // Permite solo letras
        if (!Character.isLetter(c) && c != ' ') {
        evt.consume();
        return;
        }
        // Permite máximo un espacio
        if (c == ' ' && text.contains(" ")) {
            evt.consume();
        }
        
    }//GEN-LAST:event_txtApellidosNUsuarioKeyTyped

    private void txtTelefonoNUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelefonoNUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelefonoNUsuarioActionPerformed

    private void txtTelefonoNUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoNUsuarioKeyTyped
        String text= txtTelefonoNUsuario.getText();
        int lim=9;
        if(text.length() >=9) evt.consume();
        char c=evt.getKeyChar(); //caracter actual
        if(!(Character.isDigit(c))){evt.consume();}
    }//GEN-LAST:event_txtTelefonoNUsuarioKeyTyped

    private void txtCorreoNUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCorreoNUsuarioKeyTyped
String text = txtCorreoNUsuario.getText(); // texto actual
int lim = 40;
if (text.length() >= lim) evt.consume();

char c = evt.getKeyChar(); // carácter actual

// Permitidos: letras, números y símbolos básicos de correo
String permitidos = "@._-";
if (!Character.isLetterOrDigit(c) && permitidos.indexOf(c) == -1) {
    evt.consume();
}
    }//GEN-LAST:event_txtCorreoNUsuarioKeyTyped

    private void txtNumDocNUsuarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumDocNUsuarioKeyTyped
String text = txtNumDocNUsuario.getText();
int lim = 12; // Ajusta el límite según el tipo de documento

char c = evt.getKeyChar();
if (text.length() >= lim || !Character.isDigit(c)) {
    evt.consume();
}
    }//GEN-LAST:event_txtNumDocNUsuarioKeyTyped

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
    Cliente cliente = new Cliente();
    controlador_Cliente controlCliente = new controlador_Cliente();
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    try {
        con = Conexion.establecerConexion();
        // Obtener el siguiente idCliente
        String sqlMax = "SELECT ISNULL(MAX(idCliente), 0) + 1 AS nuevoId FROM Cliente";
        ps = con.prepareStatement(sqlMax);
        rs = ps.executeQuery();
        int nuevoId = 1;
        if (rs.next()) {
            nuevoId = rs.getInt("nuevoId");
        }
        txtNombresNUsuario1.setText(String.valueOf(nuevoId)); // Asignar el nuevo ID automáticamente

        // Asignar valores al objeto Cliente
        cliente.setIdCliente(nuevoId);
        cliente.setNombres(txtNombresNUsuario.getText().trim());
        cliente.setApellidos(txtApellidosNUsuario.getText().trim());
        cliente.setTelefono(txtTelefonoNUsuario.getText().trim());
        cliente.setCorreo(txtCorreoNUsuario.getText().trim());
        cliente.setCodNacio(obtenerCodNacio(cbxNacionaNUsuario.getSelectedItem().toString()));
        cliente.setCodDistrito(obtenerCodDistrito(DistritoUsuario.getSelectedItem().toString()));
        cliente.setDireccion(cbxDireccionNUsuario.getText().trim());
        cliente.setCodSexo(jRadioButton2.isSelected() ? 2 : 1); // 1 para Mujer, 2 para Hombre
        cliente.setNumDoc(txtNumDocNUsuario.getText().trim());
        cliente.setUSUARIO(""); // Campo usuario está vacío por ahora
        cliente.setNumLicencia(txtNroLicencia.getText().trim()); // Añadir esta línea

        // Validar campos obligatorios (incluyendo NroLicencia si es obligatorio)
        if (txtNombresNUsuario.getText().isEmpty() || txtApellidosNUsuario.getText().isEmpty() || 
            txtTelefonoNUsuario.getText().isEmpty() || cbxDireccionNUsuario.getText().isEmpty() || 
            txtNumDocNUsuario.getText().isEmpty() || txtNroLicencia.getText().isEmpty()) { // Añadido txtNroLicencia
            JOptionPane.showMessageDialog(null, "Ingrese todos los campos obligatorios");
        } else {
            if (controlCliente.guardar(cliente)) {
                JOptionPane.showMessageDialog(null, "Registro guardado");
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(null, "Error al guardar");
            }
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cerrar conexión: " + e.getMessage());
        }
    }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void DistritoUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DistritoUsuarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DistritoUsuarioActionPerformed

    private void txtNombresNUsuario1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresNUsuario1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresNUsuario1ActionPerformed

    private void txtNombresNUsuario1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombresNUsuario1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombresNUsuario1KeyTyped

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_btnLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> DistritoUsuario;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JTextField cbxDireccionNUsuario;
    private javax.swing.JComboBox<String> cbxNacionaNUsuario;
    private javax.swing.JComboBox<String> cbxTipDocNUsuario;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField txtApellidosNUsuario;
    private javax.swing.JTextField txtCorreoNUsuario;
    private javax.swing.JTextField txtNombresNUsuario;
    private javax.swing.JTextField txtNombresNUsuario1;
    private javax.swing.JTextField txtNroLicencia;
    private javax.swing.JTextField txtNumDocNUsuario;
    private javax.swing.JTextField txtTelefonoNUsuario;
    // End of variables declaration//GEN-END:variables

private void limpiarCampos() {
        txtNombresNUsuario.setText("");
        txtApellidosNUsuario.setText("");
        txtTelefonoNUsuario.setText("");
        txtCorreoNUsuario.setText("");
        cbxNacionaNUsuario.setSelectedIndex(0);
        DistritoUsuario.setSelectedIndex(0);
        cbxDireccionNUsuario.setText("");
        buttonGroup1.clearSelection();
        cbxTipDocNUsuario.setSelectedIndex(0);
        txtNumDocNUsuario.setText("");
        txtNombresNUsuario1.setText(""); 
    }
 private int obtenerCodDistrito(String nombreDistrito) {
        int codDistrito = 0;
        Connection con = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            con = Conexion.establecerConexion();
            String sql = "SELECT CodDistrito FROM Distrito WHERE Nombre = ?";
            ps = con.prepareStatement(sql);
            ps.setString(1, nombreDistrito);
            rs = ps.executeQuery();
            if (rs.next()) {
                codDistrito = rs.getInt("CodDistrito");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al obtener código de distrito: " + e.getMessage());
        } finally {
            try {
                if (rs != null) rs.close();
                if (ps != null) ps.close();
                if (con != null) con.close();
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, "Error al cerrar conexión: " + e.getMessage());
            }
        }
        return codDistrito;
    }
 private int obtenerCodNacio(String nacionalidad) {
    int codNacio = 0;
    Connection con = null;
    PreparedStatement ps = null;
    ResultSet rs = null;
    try {
        con = Conexion.establecerConexion();
        String sql = "SELECT CodNacio FROM Nacionalidad WHERE Nombre = ?";
        ps = con.prepareStatement(sql);
        ps.setString(1, nacionalidad);
        rs = ps.executeQuery();
        if (rs.next()) {
            codNacio = rs.getInt("CodNacio");
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al obtener código de nacionalidad: " + e.getMessage());
    } finally {
        try {
            if (rs != null) rs.close();
            if (ps != null) ps.close();
            if (con != null) con.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, "Error al cerrar conexión: " + e.getMessage());
        }
    }
    return codNacio;
}
 
}
